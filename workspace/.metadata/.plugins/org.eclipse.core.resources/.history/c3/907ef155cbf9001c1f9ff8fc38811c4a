package tw.Project_1.userFarm;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.plaf.FontUIResource;

import tw.Project_1.fileHandling.DataReadingAndWriting;
import tw.Project_1.material.Hospital;
import tw.Project_1.material.HospitalDao;
import tw.Project_1.userJDialog.SelectStringJDialog;
import tw.Project_1.userPanel.LogJPanel;
import tw.Project_1.userPanel.VisibleJpanel;

public class UserFrame extends JFrame {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private List<Hospital> hospitals = null;
	private HospitalDao hospitalDao;
	private VisibleJpanel visible;
	private DataReadingAndWriting dataReadingAndWriting;
	private SelectStringJDialog selectStringJDialog ;
	
	
	public List<Hospital> getHospitals() {
		return this.hospitals;
	}

	public void setHospitals(List<Hospital> list) {
		this.hospitals = list;
	}

	public UserFrame() throws SQLException {
		this.hospitalDao = new HospitalDao();
		this.dataReadingAndWriting = new DataReadingAndWriting();
		this.selectStringJDialog = new SelectStringJDialog(this.hospitalDao );
		createFrame();
	}

//=======================================================
	//
	private void createFrame() throws SQLException {
		Container contentPane = this.getContentPane();
		this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		this.setLayout(new FlowLayout(1, 5, 5));
		//

		contentPane.add(keyWord());
		contentPane.add(visible());
		//
		this.setSize(1400, 770);
		this.setLocationRelativeTo(null);
		this.setTitle("公費疫苗施打處資料後台管理系統");
		this.setResizable(false);
		this.setVisible(true);
		hospitalDao.openSqlConnection();
	}

//=======================================================
//=======================================================
	// 左邊視窗,包含查詢功能與Log功能
	private JPanel keyWord() {
		JPanel panel = new JPanel();
		panel.setPreferredSize(new Dimension(350, 800));

		LogJPanel logJPanel = new LogJPanel(this.hospitalDao,this.selectStringJDialog);
		JPanel createLogJPanel = logJPanel.createLogJPanel();
		panel.add(this.allKeyWord());
		panel.add(createLogJPanel);

		return panel;
	}

	// 右邊視窗，包含顯示及增刪改查
	private JPanel visible() {
		visible = new VisibleJpanel(this.hospitalDao);
		JPanel createJPanel = visible.createJPanel();
		return createJPanel;
	}

//=======================================================
//=======================================================
	public JPanel allKeyWord() {
		JPanel panel = new JPanel();
		Border blackline = BorderFactory.createLineBorder(Color.gray);
		panel.setBorder(blackline);

		// 默認尺寸
		panel.setPreferredSize(new Dimension(350, 200));
		panel.add(keyWordTitlePanel());
		panel.add(keyWordpDistPane());
		panel.add(keyPanelNamePanel());
		panel.add(keyWordPanelforExport());
		panel.setVisible(true);
		return panel;
	}

	//
	// ===================================================
	// 標題ok
	// ===================================================
	private JPanel keyWordTitlePanel() {
		JPanel jPanel = new JPanel();
		jPanel.setLayout(new FlowLayout(0));
		// jPanel.setPreferredSize(new Dimension(345, 30));
		// jPanel.setPreferredSize(new Dimension(350, 15));
		JLabel jLabel = new JLabel("查詢系統");
		jPanel.add(jLabel);
		return jPanel;
	}

	//
	// ===================================================
	// 地區查詢ok
	// ===================================================
	private JPanel keyWordpDistPane() {
		JPanel panel = new JPanel();
		panel.setPreferredSize(new Dimension(345, 30));
		panel.setLayout(new FlowLayout(0));
		// setBounds(10, 10, 200, 20);
		// panel.setLayout(new GridLayout(1, 5));
		//
		JLabel cityLabel = new JLabel("縣市 : ");
		JComboBox<String> cityComboBox = cityLabel();
		cityComboBox.setSelectedIndex(-1);
		JLabel distLabel = new JLabel("    地區 : ");

		JComboBox<String> distComboBox = new JComboBox<String>();
		distComboBox.addItem("請先選縣市");
		distComboBox.setSelectedIndex(-1);

		cityComboBox.addActionListener((e) -> {
			distComboBox.removeAllItems();
			String cityString = (String) cityComboBox.getSelectedItem();
			try {
				List<String> selectDLists = hospitalDao.selectDLists(cityString);
				for (String distName : selectDLists) {
					distComboBox.addItem(distName);
				}
				distComboBox.addItem("查所有地區");
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		});
		//
		JButton jButton = new JButton("查詢");
		jButton.addActionListener((e) -> {
			String cityString = (String) cityComboBox.getSelectedItem();
			String distString = (String) distComboBox.getSelectedItem();
			if(cityString != null && distString != null ) {
				try {
					if (distString.equals("查所有地區")) {
						List<Hospital> Hospitals = hospitalDao.selectHospitals(cityString, 1);
						visible.changeJlist(Hospitals);
					} else {
						List<Hospital> Hospitals = hospitalDao.selectHospitals(cityString, distString);
						visible.changeJlist(Hospitals);
					}

				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			
			}else {
				selectStringJDialog.selectJDialog(250, 250, "請選擇縣市地區");
			}
			

		});
		//
		panel.add(cityLabel);
		panel.add(cityComboBox);
		panel.add(distLabel);
		panel.add(distComboBox);
		panel.add(jButton);

		return panel;
	}

	//
	// ===================================================
	// 診所名稱查詢ok
	// ===================================================
	private JPanel keyPanelNamePanel() {
		JPanel panel = new JPanel();
		panel.setPreferredSize(new Dimension(345, 30));
		panel.setLayout(new FlowLayout(0));
		// setBounds(10, 30, 200, 20);
		panel.setFont(new FontUIResource("新細明體", Font.ITALIC, 20));
		// panel.setLayout(new GridLayout(1, 5));

		JLabel hospitalName = new JLabel("診所名稱 : ");
		JTextField hospitalTextField = new JTextField(17);
		JButton inquireButton = new JButton("查詢");
		inquireButton.addActionListener((e) -> {
			try {

				String text = hospitalTextField.getText();
				if (text != null) {
					List<Hospital> selectHospitals = this.hospitalDao.selectHospitals(text);
					if (selectHospitals.size()> 1) {
						visible.changeJlist(selectHospitals);
					} else {
						selectStringJDialog.selectJDialog(250, 250, "查無該筆資料");
					}
					
				}else {
					selectStringJDialog.selectJDialog(250, 250, "請輸入需要查詢找所名稱");
				}
				
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

		});
		panel.add(hospitalName);
		panel.add(hospitalTextField);
		panel.add(inquireButton);

		return panel;

	}

	//
	// ===================================================
	// 匯出ok
	// ===================================================
	private JPanel keyWordPanelforExport() {
		JPanel panel = new JPanel();
		panel.setLayout(new FlowLayout(0));
		panel.setPreferredSize(new Dimension(345, 30));

		JLabel hospitalName = new JLabel("匯出選取資料 : ");
		JButton csv = new JButton("csv檔案");
		csv.addActionListener((e) -> {
			List<Hospital> listSelectionListeners = visible.getListSelectionListeners();
			if (listSelectionListeners.size() > 0) {
				JFileChooser jFileChooser = new JFileChooser();
				jFileChooser.setSelectedFile(new File("test.csv"));
				jFileChooser.showSaveDialog(null);
				File selectedFile = jFileChooser.getSelectedFile();
				if (selectedFile != null) {
					try {
						dataReadingAndWriting.exportCsvForHospitals(listSelectionListeners, selectedFile);
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}

				}

			} else {
				selectStringJDialog.selectJDialog(250, 250, "至少要選一項");
			}

		});
		JButton json = new JButton("Json檔案");
		json.addActionListener((e) -> {
			List<Hospital> listSelectionListeners = visible.getListSelectionListeners();
			if (listSelectionListeners.size() > 0) {
				JFileChooser jFileChooser = new JFileChooser();
				jFileChooser.setSelectedFile(new File("test.json"));
				jFileChooser.showSaveDialog(null);
				File selectedFile = jFileChooser.getSelectedFile();

				if (selectedFile != null) {
					try {
						dataReadingAndWriting.exportJsonForHospital(listSelectionListeners, selectedFile);
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}

			} else {
				selectStringJDialog.selectJDialog(250, 250, "至少要選一項");
			}

		});

		panel.add(hospitalName, BorderLayout.WEST);
		panel.add(csv, BorderLayout.WEST);
		panel.add(json, BorderLayout.WEST);
		return panel;

	}

//=====================================================================================
	

	private JComboBox<String> cityLabel() {
		JComboBox<String> cityComboBox = new JComboBox<String>();

		cityComboBox.addItem("臺北市");
		cityComboBox.addItem("新北市");
		cityComboBox.addItem("基隆市");
		cityComboBox.addItem("桃園縣");
		cityComboBox.addItem("新竹市");
		cityComboBox.addItem("新竹縣");
		cityComboBox.addItem("宜蘭縣");
		cityComboBox.addItem("苗栗縣");
		cityComboBox.addItem("臺中市");
		cityComboBox.addItem("彰化縣");
		cityComboBox.addItem("南投縣");
		cityComboBox.addItem("雲林縣");
		cityComboBox.addItem("嘉義市");
		cityComboBox.addItem("嘉義縣");
		cityComboBox.addItem("臺南市");
		cityComboBox.addItem("高雄市");
		cityComboBox.addItem("屏東縣");
		cityComboBox.addItem("臺東縣");
		cityComboBox.addItem("花蓮縣");
		cityComboBox.addItem("澎湖縣");
		cityComboBox.addItem("連江縣");
		cityComboBox.addItem("金門縣");
		return cityComboBox;
	}

	// =================================================開連線===============================

	// ================繼承方法改寫==========================================================

	@Override
	public void setDefaultCloseOperation(int operation) {
		try {
			this.hospitalDao.closeSqlConnection();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		super.setDefaultCloseOperation(operation);
	}

}
